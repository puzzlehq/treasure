/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/Welcome.tsx'
import { Route as NewGameImport } from './routes/NewGame.tsx'
import { Route as HomeImport } from './routes/Home.tsx'
import { Route as GameIntroductionIndexImport } from './routes/GameIntroduction/index.tsx'
import { Route as AleoIntroductionIndexImport } from './routes/AleoIntroduction/index.tsx'
import { Route as RevealAnswerGameIdImport } from './routes/RevealAnswer/$gameId.tsx'
import { Route as RenegeStoreImport } from './routes/Renege/store.tsx'
import { Route as Renege01RenegeImport } from './routes/Renege/_01_Renege.tsx'
import { Route as NewGameVspersonImport } from './routes/NewGame/vs_person.tsx'
import { Route as GameIntroduction05ConclusionImport } from './routes/GameIntroduction/05_Conclusion.tsx'
import { Route as GameIntroduction04UnlockedImport } from './routes/GameIntroduction/04_Unlocked.tsx'
import { Route as GameIntroduction03LockedImport } from './routes/GameIntroduction/03_Locked.tsx'
import { Route as GameIntroduction02ChestInfoImport } from './routes/GameIntroduction/02_ChestInfo.tsx'
import { Route as GameIntroduction01GamePartsImport } from './routes/GameIntroduction/01_GameParts.tsx'
import { Route as AcceptGameGameIdImport } from './routes/AcceptGame/$gameId.tsx'
import { Route as RevealAnswerGameId02ConfirmedImport } from './routes/RevealAnswer/$gameId/02_Confirmed.tsx'
import { Route as RevealAnswerGameId01RevealImport } from './routes/RevealAnswer/$gameId/01_Reveal.tsx'
import { Route as NewGameVspersonStoreImport } from './routes/NewGame/vs_person/store.ts'
import { Route as NewGameVsperson05GameStartedImport } from './routes/NewGame/vs_person/05_GameStarted.tsx'
import { Route as NewGameVsperson04ConfirmStartGameImport } from './routes/NewGame/vs_person/04_ConfirmStartGame.tsx'
import { Route as NewGameVsperson03SetWagerImport } from './routes/NewGame/vs_person/03_SetWager.tsx'
import { Route as NewGameVsperson02HideTreasureImport } from './routes/NewGame/vs_person/02_HideTreasure.tsx'
import { Route as NewGameVsperson01NewGameImport } from './routes/NewGame/vs_person/01_NewGame.tsx'
import { Route as FinishGameWinGameIdImport } from './routes/FinishGame/Win/$gameId.tsx'
import { Route as FinishGameLoseGameIdImport } from './routes/FinishGame/Lose/$gameId.tsx'
import { Route as AcceptGameGameId03ConfirmedImport } from './routes/AcceptGame/$gameId/03_Confirmed.tsx'
import { Route as AcceptGameGameId02AcceptGameImport } from './routes/AcceptGame/$gameId/02_AcceptGame.tsx'
import { Route as AcceptGameGameId01SubmitWagerImport } from './routes/AcceptGame/$gameId/01_SubmitWager.tsx'
import { Route as FinishGameWinGameId02GameoverImport } from './routes/FinishGame/Win/$gameId/02_Gameover.tsx'
import { Route as FinishGameWinGameId01WinImport } from './routes/FinishGame/Win/$gameId/01_Win.tsx'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  path: '/Welcome',
  getParentRoute: () => rootRoute,
} as any)

const NewGameRoute = NewGameImport.update({
  path: '/NewGame',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  path: '/Home',
  getParentRoute: () => rootRoute,
} as any)

const GameIntroductionIndexRoute = GameIntroductionIndexImport.update({
  path: '/GameIntroduction/',
  getParentRoute: () => rootRoute,
} as any)

const AleoIntroductionIndexRoute = AleoIntroductionIndexImport.update({
  path: '/AleoIntroduction/',
  getParentRoute: () => rootRoute,
} as any)

const RevealAnswerGameIdRoute = RevealAnswerGameIdImport.update({
  path: '/RevealAnswer/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const RenegeStoreRoute = RenegeStoreImport.update({
  path: '/Renege/store',
  getParentRoute: () => rootRoute,
} as any)

const Renege01RenegeRoute = Renege01RenegeImport.update({
  path: '/Renege/01_Renege',
  getParentRoute: () => rootRoute,
} as any)

const NewGameVspersonRoute = NewGameVspersonImport.update({
  path: '/vs_person',
  getParentRoute: () => NewGameRoute,
} as any)

const GameIntroduction05ConclusionRoute =
  GameIntroduction05ConclusionImport.update({
    path: '/GameIntroduction/05_Conclusion',
    getParentRoute: () => rootRoute,
  } as any)

const GameIntroduction04UnlockedRoute = GameIntroduction04UnlockedImport.update(
  {
    path: '/GameIntroduction/04_Unlocked',
    getParentRoute: () => rootRoute,
  } as any,
)

const GameIntroduction03LockedRoute = GameIntroduction03LockedImport.update({
  path: '/GameIntroduction/03_Locked',
  getParentRoute: () => rootRoute,
} as any)

const GameIntroduction02ChestInfoRoute =
  GameIntroduction02ChestInfoImport.update({
    path: '/GameIntroduction/02_ChestInfo',
    getParentRoute: () => rootRoute,
  } as any)

const GameIntroduction01GamePartsRoute =
  GameIntroduction01GamePartsImport.update({
    path: '/GameIntroduction/01_GameParts',
    getParentRoute: () => rootRoute,
  } as any)

const AcceptGameGameIdRoute = AcceptGameGameIdImport.update({
  path: '/AcceptGame/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const RevealAnswerGameId02ConfirmedRoute =
  RevealAnswerGameId02ConfirmedImport.update({
    path: '/02_Confirmed',
    getParentRoute: () => RevealAnswerGameIdRoute,
  } as any)

const RevealAnswerGameId01RevealRoute = RevealAnswerGameId01RevealImport.update(
  {
    path: '/01_Reveal',
    getParentRoute: () => RevealAnswerGameIdRoute,
  } as any,
)

const NewGameVspersonStoreRoute = NewGameVspersonStoreImport.update({
  path: '/store',
  getParentRoute: () => NewGameVspersonRoute,
} as any)

const NewGameVsperson05GameStartedRoute =
  NewGameVsperson05GameStartedImport.update({
    path: '/05_GameStarted',
    getParentRoute: () => NewGameVspersonRoute,
  } as any)

const NewGameVsperson04ConfirmStartGameRoute =
  NewGameVsperson04ConfirmStartGameImport.update({
    path: '/04_ConfirmStartGame',
    getParentRoute: () => NewGameVspersonRoute,
  } as any)

const NewGameVsperson03SetWagerRoute = NewGameVsperson03SetWagerImport.update({
  path: '/03_SetWager',
  getParentRoute: () => NewGameVspersonRoute,
} as any)

const NewGameVsperson02HideTreasureRoute =
  NewGameVsperson02HideTreasureImport.update({
    path: '/02_HideTreasure',
    getParentRoute: () => NewGameVspersonRoute,
  } as any)

const NewGameVsperson01NewGameRoute = NewGameVsperson01NewGameImport.update({
  path: '/01_NewGame',
  getParentRoute: () => NewGameVspersonRoute,
} as any)

const FinishGameWinGameIdRoute = FinishGameWinGameIdImport.update({
  path: '/FinishGame/Win/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const FinishGameLoseGameIdRoute = FinishGameLoseGameIdImport.update({
  path: '/FinishGame/Lose/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const AcceptGameGameId03ConfirmedRoute =
  AcceptGameGameId03ConfirmedImport.update({
    path: '/03_Confirmed',
    getParentRoute: () => AcceptGameGameIdRoute,
  } as any)

const AcceptGameGameId02AcceptGameRoute =
  AcceptGameGameId02AcceptGameImport.update({
    path: '/02_AcceptGame',
    getParentRoute: () => AcceptGameGameIdRoute,
  } as any)

const AcceptGameGameId01SubmitWagerRoute =
  AcceptGameGameId01SubmitWagerImport.update({
    path: '/01_SubmitWager',
    getParentRoute: () => AcceptGameGameIdRoute,
  } as any)

const FinishGameWinGameId02GameoverRoute =
  FinishGameWinGameId02GameoverImport.update({
    path: '/02_Gameover',
    getParentRoute: () => FinishGameWinGameIdRoute,
  } as any)

const FinishGameWinGameId01WinRoute = FinishGameWinGameId01WinImport.update({
  path: '/01_Win',
  getParentRoute: () => FinishGameWinGameIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/Home': {
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/NewGame': {
      preLoaderRoute: typeof NewGameImport
      parentRoute: typeof rootRoute
    }
    '/Welcome': {
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/AcceptGame/$gameId': {
      preLoaderRoute: typeof AcceptGameGameIdImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/01_GameParts': {
      preLoaderRoute: typeof GameIntroduction01GamePartsImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/02_ChestInfo': {
      preLoaderRoute: typeof GameIntroduction02ChestInfoImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/03_Locked': {
      preLoaderRoute: typeof GameIntroduction03LockedImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/04_Unlocked': {
      preLoaderRoute: typeof GameIntroduction04UnlockedImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/05_Conclusion': {
      preLoaderRoute: typeof GameIntroduction05ConclusionImport
      parentRoute: typeof rootRoute
    }
    '/NewGame/vs_person': {
      preLoaderRoute: typeof NewGameVspersonImport
      parentRoute: typeof NewGameImport
    }
    '/Renege/_01_Renege': {
      preLoaderRoute: typeof Renege01RenegeImport
      parentRoute: typeof rootRoute
    }
    '/Renege/store': {
      preLoaderRoute: typeof RenegeStoreImport
      parentRoute: typeof rootRoute
    }
    '/RevealAnswer/$gameId': {
      preLoaderRoute: typeof RevealAnswerGameIdImport
      parentRoute: typeof rootRoute
    }
    '/AleoIntroduction/': {
      preLoaderRoute: typeof AleoIntroductionIndexImport
      parentRoute: typeof rootRoute
    }
    '/GameIntroduction/': {
      preLoaderRoute: typeof GameIntroductionIndexImport
      parentRoute: typeof rootRoute
    }
    '/AcceptGame/$gameId/01_SubmitWager': {
      preLoaderRoute: typeof AcceptGameGameId01SubmitWagerImport
      parentRoute: typeof AcceptGameGameIdImport
    }
    '/AcceptGame/$gameId/02_AcceptGame': {
      preLoaderRoute: typeof AcceptGameGameId02AcceptGameImport
      parentRoute: typeof AcceptGameGameIdImport
    }
    '/AcceptGame/$gameId/03_Confirmed': {
      preLoaderRoute: typeof AcceptGameGameId03ConfirmedImport
      parentRoute: typeof AcceptGameGameIdImport
    }
    '/FinishGame/Lose/$gameId': {
      preLoaderRoute: typeof FinishGameLoseGameIdImport
      parentRoute: typeof rootRoute
    }
    '/FinishGame/Win/$gameId': {
      preLoaderRoute: typeof FinishGameWinGameIdImport
      parentRoute: typeof rootRoute
    }
    '/NewGame/vs_person/01_NewGame': {
      preLoaderRoute: typeof NewGameVsperson01NewGameImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/NewGame/vs_person/02_HideTreasure': {
      preLoaderRoute: typeof NewGameVsperson02HideTreasureImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/NewGame/vs_person/03_SetWager': {
      preLoaderRoute: typeof NewGameVsperson03SetWagerImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/NewGame/vs_person/04_ConfirmStartGame': {
      preLoaderRoute: typeof NewGameVsperson04ConfirmStartGameImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/NewGame/vs_person/05_GameStarted': {
      preLoaderRoute: typeof NewGameVsperson05GameStartedImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/NewGame/vs_person/store': {
      preLoaderRoute: typeof NewGameVspersonStoreImport
      parentRoute: typeof NewGameVspersonImport
    }
    '/RevealAnswer/$gameId/01_Reveal': {
      preLoaderRoute: typeof RevealAnswerGameId01RevealImport
      parentRoute: typeof RevealAnswerGameIdImport
    }
    '/RevealAnswer/$gameId/02_Confirmed': {
      preLoaderRoute: typeof RevealAnswerGameId02ConfirmedImport
      parentRoute: typeof RevealAnswerGameIdImport
    }
    '/FinishGame/Win/$gameId/01_Win': {
      preLoaderRoute: typeof FinishGameWinGameId01WinImport
      parentRoute: typeof FinishGameWinGameIdImport
    }
    '/FinishGame/Win/$gameId/02_Gameover': {
      preLoaderRoute: typeof FinishGameWinGameId02GameoverImport
      parentRoute: typeof FinishGameWinGameIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  HomeRoute,
  NewGameRoute.addChildren([
    NewGameVspersonRoute.addChildren([
      NewGameVsperson01NewGameRoute,
      NewGameVsperson02HideTreasureRoute,
      NewGameVsperson03SetWagerRoute,
      NewGameVsperson04ConfirmStartGameRoute,
      NewGameVsperson05GameStartedRoute,
      NewGameVspersonStoreRoute,
    ]),
  ]),
  WelcomeRoute,
  AcceptGameGameIdRoute.addChildren([
    AcceptGameGameId01SubmitWagerRoute,
    AcceptGameGameId02AcceptGameRoute,
    AcceptGameGameId03ConfirmedRoute,
  ]),
  GameIntroduction01GamePartsRoute,
  GameIntroduction02ChestInfoRoute,
  GameIntroduction03LockedRoute,
  GameIntroduction04UnlockedRoute,
  GameIntroduction05ConclusionRoute,
  Renege01RenegeRoute,
  RenegeStoreRoute,
  RevealAnswerGameIdRoute.addChildren([
    RevealAnswerGameId01RevealRoute,
    RevealAnswerGameId02ConfirmedRoute,
  ]),
  AleoIntroductionIndexRoute,
  GameIntroductionIndexRoute,
  FinishGameLoseGameIdRoute,
  FinishGameWinGameIdRoute.addChildren([
    FinishGameWinGameId01WinRoute,
    FinishGameWinGameId02GameoverRoute,
  ]),
])

/* prettier-ignore-end */
